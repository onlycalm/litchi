# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: cicd

on:
  push:
    branches: [ "feature/cicd" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository.
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 1

    - name: Update submodules.
      run: |
        git submodule update --init --remote --depth 1

    - name: Install dependencies.
      run: |
        sudo apt-get update
        sudo apt-get upgrade -y

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        mkdir -p build
        cd build
        cmake ..

    - name: Build
      # Build your program with the given configuration
      run: |
        cd build
        make release -j$(nproc)
